---
## basically this is the 'base' profile installation of anything I will have.

# assumption: there is an ssh key for github registered for my account present.
# after all, I want my full environment there.
- name: Check if .ssh present
  stat:
    path: ~/.ssh/id_rsa.pub
  register: ssh

- name: Make sure ~/configs/ is present
  git:
    repo: "git@github.com:{{ git_username }}/{{ configs_repo }}.git"
    dest: "~/{{ configs_repo }}"
    accept_hostkey: true
    update: no
  register: repo
  when: ssh is succeeded

- name: Update ~/configs/ directory
  git:
    repo: "git@github.com:{{ git_username }}/{{ configs_repo }}.git"
    dest: "~/{{ configs_repo }}"
  when: repo is succeeded
  ignore_errors: true

# git config
- name: Template .gitconfig
  template:
    src: templates/.gitconfig.j2
    dest: ~/.gitconfig


# fish config
- name: Check if fish directory already exists
  stat: path=~/.config/fish
  register: fishdir_exists

- name: Remove existing fish directory and config
  file: path=~/.config/fish state=absent
  when: fishdir_exists.stat.isdir is defined and fishdir_exists.stat.isdir

- name: Create new fish config directory
  file:
    path: ~/.config/fish
    state: directory

- name: Template fish config
  template:
    src: templates/fishconfig.j2
    dest: ~/.config/fish/config.fish

- name: Link fish variables
  file:
    src: "~/{{ configs_repo }}/{{ dotconfigdir }}/fish/fish_variables"
    dest: ~/.config/fish/fish_variables
    state: link
  when: repo is succeeded


- fail:


# .config files
- name: link vim directory
  file:
    src: "~/{{ configs_repo }}/{{ dotconfigdir }}/nvim"
    dest: ~/.config/vim
    state: link
  when: repo is succeeded

- name: link nvim directory
  file:
    src: "~/{{ configs_repo }}/{{ dotconfigdir }}/nvim"
    dest: ~/.config/nvim
    state: link
  when: repo is succeeded


# set up 'b' 
- name: link broot directory
  file:
    src: "~/{{ configs_repo }}/{{ dotconfigdir }}/broot"
    dest: ~/.config/broot
    state: link
  when: repo is succeeded

- name: Create .local/bin
  file:
    path: ~/.local/bin
    state: directory

- name: link b
  file:
    src: "~/{{ configs_repo }}/scripts/b.sh"
    dest: ~/.local/bin/b
    state: link
  when: repo is succeeded

- name: Make sure text_stuff is present
  git:
    repo: "git@github.com:{{ git_username }}/text_zeug.git"
    dest: ~/text_zeug
    update: no
  when: ssh is succeeded
